name: Version Packages
on:
  push:
    branches:
      - main
concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: false
jobs:
  version:
    name: Version Packages
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 2
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Install deps and build (with cache)
        uses: bahmutov/npm-install@v1
        env:
          CYPRESS_INSTALL_BINARY: 0
      - name: Copy lockfile to actions
        run: |
          cp yarn.lock .github/actions/affected-paths
          cp yarn.lock .github/actions/create-changeset
          cp yarn.lock .github/actions/tagger
          cp yarn.lock .github/actions/upsert-prs
      - name: Affected files
        id: all_affected
        uses: ./.github/actions/affected-paths
      - name: Create changeset
        uses: ./.github/actions/create-changeset
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          ignoredPackages: '"versioning-demo"'
          paths: ${{ steps.all_affected.outputs.paths }}
      - name: Version packages
        run: yarn run version-packages
      - name: Commit Changes
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: "chore(changeset): bump package versions"
          commit_options: '--no-verify --signoff'
      - name: Affected Changelogs
        id: affected_changelogs
        uses: ./.github/actions/affected-paths
        with:
          filter: 'CHANGELOG.md$'
      - name: Create tags
        uses: ./.github/actions/tagger
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          packageScope: 'versioning-demo'
          paths: ${{ steps.affected_changelogs.outputs.paths }}
      - name: Create Pull Requests for affected packages
        uses: ./.github/actions/upsert-prs
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          paths: ${{ steps.affected_changelogs.outputs.paths }}
          environmentName: test
  deploy:
    name: Deploy Packages
    runs-on: ubuntu-latest
    needs: version
    environment: production
    env:
      NETLIFY_AUTH_TOKEN: ${{secrets.NETLIFY_AUTH_TOKEN}}
      NETLIFY_SITE_ID: ${{secrets.NETLIFY_SITE_ID}}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 2
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Install deps and build (with cache)
        uses: bahmutov/npm-install@v1
        env:
          CYPRESS_INSTALL_BINARY: 0
      - name: Build
        run: yarn lerna run build --since HEAD~1
      - name: Deploy
        run: yarn lerna run deploy --since HEAD~1
